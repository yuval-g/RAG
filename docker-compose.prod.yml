services:
  # RAG Engine API (Production)
  rag-engine:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
      - "8089:8089"
    environment:
      - ENVIRONMENT=production
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8001
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=WARNING
      - WORKERS=4
    volumes:
      - rag_data:/app/data
      - rag_logs:/app/logs
    depends_on:
      - chroma
      - redis
    networks:
      - rag-network
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  # Chroma Vector Database (Production)
  chroma:
    image: chromadb/chroma:latest
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - PERSIST_DIRECTORY=/chroma/chroma
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - rag-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  # Redis for caching (Production)
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - rag-network
    restart: always
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  # Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./deployment/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - rag-engine
    networks:
      - rag-network
    restart: always

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./deployment/prometheus.prod.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    networks:
      - rag-network
    restart: always

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployment/grafana:/etc/grafana/provisioning
    networks:
      - rag-network
    restart: always

volumes:
  rag_data:
  rag_logs:
  chroma_data:
  redis_data:
  prometheus_data:
  grafana_data:
  nginx_logs:

networks:
  rag-network:
    driver: bridge
